# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: pickup

on: 
#  push:
#    branches: [ "main" ]
    
#  pull_request:
#    branches: [ "main" ]
  
  workflow_dispatch:
  
  schedule:
  # every 7:30(UTC) = 16:30(JST) 平日のみ
  - cron:  '30 07 * * 1-5'
  # every 7:00(UTC) = 16:00(JST) 平日のみ
  - cron:  '00 07 * * 1-5'
  # every 6:30(UTC) = 15:30(JST) 平日のみ
  - cron:  '30 06 * * 1-5'
  # every 6:00(UTC) = 15:00(JST) 平日のみ
  - cron:  '00 06 * * 1-5'
  # every 5:30(UTC) = 14:30(JST) 平日のみ
  - cron:  '30 05 * * 1-5'
  # every 5:00(UTC) = 14:00(JST) 平日のみ
  - cron:  '00 05 * * 1-5'
  # every 4:30(UTC) = 13:30(JST) 平日のみ
  - cron:  '30 04 * * 1-5'
  # every 4:00(UTC) = 13:00(JST) 平日のみ
  - cron:  '00 04 * * 1-5'
  # every 3:00(UTC) = 12:00(JST) 平日のみ
  - cron:  '00 03 * * 1-5'
  # every 2:00(UTC) = 11:00(JST) 平日のみ
  - cron:  '00 02 * * 1-5'
  # every 1:00(UTC) = 10:00(JST) 平日のみ
  - cron:  '00 01 * * 1-5'
  
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
      with:
          ref: ${{ github.head_ref }}
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
        cache: 'pip' # caching pip dependencies
    - name: git config
      run: |
        git config --global user.name "ywakida"
        git config --global user.email "y.wakida.business@gmai.com"
        git config --global core.filemode false # ignore file permission
        git config --global pull.rebase true # true:rebase false:merge
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install yfinance pandas_datareader xlrd plotly
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
                
    - name: chart analyze
      run: |
        python -B -c "import todayspickup; todayspickup.create_tickers()"
        python -B -c "import todayspickup; todayspickup.change_view()"

    - name: git update
      run: |
        # git update
        git add -A #.csv
        git status --porcelain
        if [ -n "$(git status --porcelain)" ]; then
            echo "there are changes";
            git commit -m "update & add ohlcv csv" -a       
            git pull
            git push origin main
        else
            echo "no changes";
        fi
        
